###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         13/Jun/2018  13:43:14 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                  #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\Source\SampleApp.c                   #
#    Command line       =  -f "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè              #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8w #
#                          Coord.cfg" (-DCPU32MHZ -DROOT=__near_func          #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8w #
#                          Config.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\Source\SampleApp.c" -D ZIGBEEPRO -D  #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D NV_INIT -D NV_RESTORE -D           #
#                          LCD_SUPPORTED=DEBUG -D HAL_UART=TRUE -lC           #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\CoordinatorEB-Pro\List\"    #
#                          -lA "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè             #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\CoordinatorEB-Pro\List\"    #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\CoordinatorEB-Pro\Obj\" -e  #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè              #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\" -I                        #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\SOURCE\" -I              #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\"   #
#                          -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè              #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\M #
#                          T\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè          #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\H #
#                          AL\INCLUDE\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè #
#                           2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          HAL\TARGET\CC2530EB\" -I                           #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\O #
#                          SAL\MCU\CCSOC\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ #
#                          ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\OSAL\INCLUDE\" -I "C:\Users\korny\Desktop\ÎïÁªÍ #
#                          ø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\AF\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ #
#                          ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\NWK\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿Î #
#                          Éè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT #
#                          S\STACK\SEC\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉ #
#                          è 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS #
#                          \STACK\SAPI\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉ #
#                          è 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS #
#                          \STACK\SYS\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè #
#                           2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ #
#                          STACK\ZDO\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè  #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\Z #
#                          MAC\F8W\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè    #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\Z #
#                          MAC\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè        #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S #
#                          ERVICES\SADDR\" -I "C:\Users\korny\Desktop\ÎïÁªÍø¿ #
#                          ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\SERVICES\SDATA\" -I "C:\Users\korny\Desktop\ÎïÁ #
#                          ªÍø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\INCLUDE\" -I "C:\Users\korny\Desktop\Îï #
#                          ÁªÍø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\HIGH_LEVEL\" -I                        #
#                          "C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                 #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\M #
#                          AC\LOW_LEVEL\srf04\" -I "C:\Users\korny\Desktop\Îï #
#                          ÁªÍø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz     #
#                          --require_prototypes                               #
#    List file          =  C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                  #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\CoordinatorEB-Pro\List\Samp #
#                          leApp.lst                                          #
#    Object file        =  C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè                  #
#                          2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\CoordinatorEB-Pro\Obj\Sampl #
#                          eApp.r51                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          /******************************************
      2          *              
      3          *           ³ÌÐòÐÞ¸ÄÕß£º jafy
      4          *           ÐÞ¸ÄÔ­Òò£º   ·½±ãÑ§Ï°
      5          *
      6          *******************************************/
      7          #include "OSAL.h"
      8          #include "AF.h"
      9          #include "ZDApp.h"
     10          #include "ZDObject.h"
     11          #include "ZDProfile.h"
     12          #include <string.h>
     13          #include "SampleApp.h"
     14          #include "DebugTrace.h"
     15          
     16          #if !defined( WIN32 )
     17          #include "OnBoard.h"
     18          #endif
     19          
     20          #include "hal_lcd.h"
     21          #include "hal_led.h"
     22          #include "hal_key.h"
     23          #include "hal_uart.h"
     24          #include "LED_PWM.h"
     25          #include  <stdio.h>
     26          #include   <string.h>
     27          

   \                                 In  segment XDATA_ROM_C, align 1
     28          const cId_t SampleApp_IN_ClusterList[ SAMPLEAPP_MAX_CLUSTERS ] =
   \                     SampleApp_IN_ClusterList:
   \   000000   0100         DW 1
   \   000002   0300         DW 3
     29          {
     30            SAMPLEAPP_IN_CLUSTERID ,
     31            SAMPLEAPP_DATA_CLUSTERID 
     32          };
     33          

   \                                 In  segment XDATA_ROM_C, align 1
     34          const cId_t SampleApp_OUT_ClusterList[ SAMPLEAPP_MAX_CLUSTERS ] =
   \                     SampleApp_OUT_ClusterList:
   \   000000   0200         DW 2
   \   000002   0000         DW 0
     35          {
     36            SAMPLEAPP_OUT_CLUSTERID 
     37          };
     38          

   \                                 In  segment XDATA_ROM_C, align 1
     39          const SimpleDescriptionFormat_t  SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   040F         DW 3844
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_IN_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_OUT_ClusterList
     40          {
     41            SAMPLEAPP_ENDPOINT ,
     42            SAMPLEAPP_PROFID ,
     43            SAMPLEAPP_DEVICEID,
     44            SAMPLEAPP_DEVICE_VERSION,
     45            SAMPLEAPP_FLAGS,
     46            SAMPLEAPP_MAX_CLUSTERS ,
     47            ( cId_t *)SampleApp_IN_ClusterList,
     48            SAMPLEAPP_MAX_CLUSTERS,
     49            ( cId_t *)SampleApp_OUT_ClusterList
     50          };   //¼òµ¥ÃèÊö·û
     51          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     52          endPointDesc_t SampleApp_epDesc; //¶ËµãÃèÊö·û£¬¶ËµãÃèÊö·û°üº¬¼òµ¥ÃèÊö·û
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     53          byte SampleApp_TaskID;  //ÈÎÎñID
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     54          devStates_t SampleApp_NwkState; //Éè±¸ÍøÂç×´Ì¬
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     55          byte SampleApp_TranskID;  //·¢ËÍÐòÁÐºÅ
   \                     SampleApp_TranskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     56          unsigned char Uartbuf[20];  //´®¿Ú½ÓÊÕÉÏÎ»»úÃüÁî
   \                     Uartbuf:
   \   000000                DS 20
   \   000014                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     57          DeId NodeId[3];  //´æ´¢ÖÕ¶Ë½ÚµãµÄIDºÍip
   \                     NodeId:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     58          uint8 NodeNum=0;
   \                     NodeNum:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     59          uint16 NodeId_arr[4];
   \                     NodeId_arr:
   \   000000                DS 8
   \   000008                REQUIRE __INIT_XDATA_Z
     60          
     61          
     62          
     63          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt ); //ÏûÏ¢´¦Àíº¯Êý
     64          //void SampleApp_SendTheMessage( void );   //Êý¾Ý·¢ËÍº¯Êý
     65          void SampleApp_SendTheMessage(uint16 ShortAdr,uint8 command ); //Êý¾Ý·¢ËÍº¯Êý
     66          //°´¼üÊÂ¼þ´¦Àíº¯ÊýÉùÃ÷
     67          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
     68          static void rxCB(uint8 port,uint8 event); //´®¿Ú½ÓÊÕ´¦Àíº¯Êý
     69          void To_string(uint8 *dest ,char *src,uint8 lenght);
     70          
     71          
     72          /******************************************
     73          *              
     74          *     º¯ÊýÃû³Æ£ºSampleApp_Init
     75          *     º¯Êý¹¦ÄÜ£ºÓ¦ÓÃ²ã³õÊ¼»¯
     76          *
     77          *******************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     78          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
     79          { 
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
     80              halUARTCfg_t uartconfig;
     81              SampleApp_TaskID                  =task_id;
   \   00000C   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000F   F0           MOVX    @DPTR,A
     82              SampleApp_TranskID                =0;              //½«Êý¾Ý°üµÄÐòºÅ³õÊ¼»¯Îª0£¬Ã¿·¢ËÍÒ»¸öÊý¾Ý°ü£¬¸ÃÐòºÅ×Ô¶¯¼Ó1
   \   000010   90....       MOV     DPTR,#SampleApp_TranskID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
     83              SampleApp_epDesc.endPoint         = SAMPLEAPP_ENDPOINT;
   \   000015   90....       MOV     DPTR,#SampleApp_epDesc
   \   000018   7414         MOV     A,#0x14
   \   00001A   F0           MOVX    @DPTR,A
     84              SampleApp_epDesc.task_id          =& SampleApp_TaskID;
   \   00001B   A3           INC     DPTR
   \   00001C   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   A3           INC     DPTR
   \   000020   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000022   F0           MOVX    @DPTR,A
     85              SampleApp_epDesc.simpleDesc       =
     86                    ( SimpleDescriptionFormat_t * )&SampleApp_SimpleDesc;
   \   000023   A3           INC     DPTR
   \   000024   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000026   F0           MOVX    @DPTR,A
   \   000027   A3           INC     DPTR
   \   000028   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   00002A   F0           MOVX    @DPTR,A
     87              SampleApp_epDesc.latencyReq      =noLatencyReqs;
   \   00002B   A3           INC     DPTR
   \   00002C   E4           CLR     A
   \   00002D   F0           MOVX    @DPTR,A
     88              afRegister( &SampleApp_epDesc );    //½«¶ËµãÃèÊö·û½øÐÐ×¢²á
   \   00002E                ; Setup parameters for call to function afRegister
   \   00002E   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   000030   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000032   12....       LCALL   ??afRegister?relay
     89           
     90              RegisterForKeys( task_id ); // µÇ¼ÇËùÓÐµÄ°´¼üÊÂ¼þ
   \   000035                ; Setup parameters for call to function RegisterForKeys
   \   000035   EE           MOV     A,R6
   \   000036   F9           MOV     R1,A
   \   000037   12....       LCALL   ??RegisterForKeys?relay
     91              //HalLedSet ( HAL_LED_ALL,HAL_LED_MODE_TOGGLE);
     92              
     93               //´®¿Ú³õÊ¼»¯
     94            uartconfig.configured             =TRUE;
   \   00003A   85..82       MOV     DPL,?XSP + 0
   \   00003D   85..83       MOV     DPH,?XSP + 1
   \   000040   7401         MOV     A,#0x1
   \   000042   F0           MOVX    @DPTR,A
     95            uartconfig.baudRate               =HAL_UART_BR_115200;
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7404         MOV     A,#0x4
   \   000048   F0           MOVX    @DPTR,A
     96            uartconfig.flowControl            =FALSE;
   \   000049   7402         MOV     A,#0x2
   \   00004B   12....       LCALL   ?XSTACK_DISP0_8
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
     97            uartconfig.callBackFunc           =rxCB;
   \   000050   741B         MOV     A,#0x1b
   \   000052   12....       LCALL   ?XSTACK_DISP0_8
   \   000055   74..         MOV     A,#??rxCB?relay & 0xff
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   74..         MOV     A,#(??rxCB?relay >> 8) & 0xff
   \   00005B   F0           MOVX    @DPTR,A
     98            HalUARTOpen (0,&uartconfig);
   \   00005C                ; Setup parameters for call to function HalUARTOpen
   \   00005C   85..82       MOV     DPL,?XSP + 0
   \   00005F   85..83       MOV     DPH,?XSP + 1
   \   000062   AA82         MOV     R2,DPL
   \   000064   AB83         MOV     R3,DPH
   \   000066   7900         MOV     R1,#0x0
   \   000068   12....       LCALL   ??HalUARTOpen?relay
     99            osal_set_event(task_id,GET_ENDDEVICE_IFO);
   \   00006B                ; Setup parameters for call to function osal_set_event
   \   00006B   7A00         MOV     R2,#0x0
   \   00006D   7B70         MOV     R3,#0x70
   \   00006F   EE           MOV     A,R6
   \   000070   F9           MOV     R1,A
   \   000071   12....       LCALL   ??osal_set_event?relay
    100          }
   \   000074   741D         MOV     A,#0x1d
   \   000076   12....       LCALL   ?DEALLOC_XSTACK8
   \   000079                REQUIRE ?Subroutine0
   \   000079                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    101          
    102          
    103          /******************************************
    104          *              
    105          *     º¯ÊýÃû³Æ£ºSampleApp_ProcessEvent
    106          *     º¯Êý¹¦ÄÜ£ºÓ¦ÓÃ²ãÈÎÎñ´¦Àíº¯Êý
    107          *
    108          *******************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    109          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    110          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
   \   000007   8A..         MOV     ?V0 + 0,R2
   \   000009   8B..         MOV     ?V0 + 1,R3
    111              afIncomingMSGPacket_t *MSGpkt;
    112              if (events&SYS_EVENT_MSG)  
   \   00000B   EB           MOV     A,R3
   \   00000C   5480         ANL     A,#0x80
   \   00000E   604E         JZ      ??SampleApp_ProcessEvent_0
    113              {
    114                 MSGpkt = ( afIncomingMSGPacket_t * )osal_msg_receive( SampleApp_TaskID ); //»ñµÃ±£´æÏûÏ¢µÄµØÖ·
   \   000010                ; Setup parameters for call to function osal_msg_receive
   \   000010   90....       MOV     DPTR,#SampleApp_TaskID
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   8010         SJMP    ??SampleApp_ProcessEvent_1
    115                
    116                      while ( MSGpkt )
    117                      {
    118                        switch ( MSGpkt->hdr.event )
    119                        {        
    120                             case KEY_CHANGE://°´¼üÊÂ¼þ
    121                                  SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    122                             break;
    123                            /* case ZDO_STATE_CHANGE:
    124                                 SampleApp_NwkState = ( devStates_t )(MSGpkt->hdr.status); 
    125                                 if(SampleApp_NwkState ==DEV_ZB_COORD)
    126                                 {
    127                                   SampleApp_SendTheMessage(0xFFFF,1); //»ñÈ¡ÖÕ¶Ë½ÚµãµÄip
    128                                   break;
    129                                 }*/
    130                            case AF_INCOMING_MSG_CMD: 
    131                                SampleApp_MessageMSGCB( MSGpkt );
   \                     ??SampleApp_ProcessEvent_2:
   \   000017                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000017   EE           MOV     A,R6
   \   000018   FA           MOV     R2,A
   \   000019   EF           MOV     A,R7
   \   00001A   FB           MOV     R3,A
   \   00001B   12....       LCALL   ??SampleApp_MessageMSGCB?relay
    132                                 break;
    133                           default:
    134                                 break;
    135                        }
    136          
    137                        // Release the memory 
    138                        osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   00001E                ; Setup parameters for call to function osal_msg_deallocate
   \   00001E   EE           MOV     A,R6
   \   00001F   FA           MOV     R2,A
   \   000020   EF           MOV     A,R7
   \   000021   FB           MOV     R3,A
   \   000022   12....       LCALL   ??osal_msg_deallocate?relay
    139          
    140                        // Next - if one is available 
    141                        MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( task_id );
   \   000025                ; Setup parameters for call to function osal_msg_receive
   \   000025   A9..         MOV     R1,?V0 + 2
   \                     ??SampleApp_ProcessEvent_1:
   \   000027   12....       LCALL   ??osal_msg_receive?relay
   \   00002A   8A..         MOV     ?V0 + 4,R2
   \   00002C   8B..         MOV     ?V0 + 5,R3
   \   00002E   AE..         MOV     R6,?V0 + 4
   \   000030   AF..         MOV     R7,?V0 + 5
   \   000032   EE           MOV     A,R6
   \   000033   4F           ORL     A,R7
   \   000034   601F         JZ      ??SampleApp_ProcessEvent_4
   \   000036   8E82         MOV     DPL,R6
   \   000038   8F83         MOV     DPH,R7
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   24E6         ADD     A,#-0x1a
   \   00003D   60D8         JZ      ??SampleApp_ProcessEvent_2
   \   00003F   245A         ADD     A,#0x5a
   \   000041   70DB         JNZ     ??SampleApp_ProcessEvent_3
   \   000043                ; Setup parameters for call to function SampleApp_HandleKeys
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   E0           MOVX    A,@DPTR
   \   000047   FA           MOV     R2,A
   \   000048   8E82         MOV     DPL,R6
   \   00004A   8F83         MOV     DPH,R7
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   F9           MOV     R1,A
   \   000050   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   000053   80C9         SJMP    ??SampleApp_ProcessEvent_3
    142                      }
    143          
    144                      // return unprocessed events 
    145                      return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   000055   AA..         MOV     R2,?V0 + 0
   \   000057   E5..         MOV     A,?V0 + 1
   \   000059   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_5:
   \   00005B   FB           MOV     R3,A
   \   00005C   801A         SJMP    ??SampleApp_ProcessEvent_6
    146                }
    147                if(events&GET_ENDDEVICE_IFO)
   \                     ??SampleApp_ProcessEvent_0:
   \   00005E   EB           MOV     A,R3
   \   00005F   5470         ANL     A,#0x70
   \   000061   6011         JZ      ??SampleApp_ProcessEvent_7
    148                {
    149                  SampleApp_SendTheMessage(0xFFFF,1); //»ñÈ¡ÖÕ¶Ë½ÚµãµÄip
   \   000063                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000063   7901         MOV     R1,#0x1
   \   000065   7AFF         MOV     R2,#-0x1
   \   000067   7BFF         MOV     R3,#-0x1
   \   000069   12....       LCALL   ??SampleApp_SendTheMessage?relay
    150                  return (events ^GET_ENDDEVICE_IFO);
   \   00006C   AA..         MOV     R2,?V0 + 0
   \   00006E   E5..         MOV     A,?V0 + 1
   \   000070   6470         XRL     A,#0x70
   \   000072   80E7         SJMP    ??SampleApp_ProcessEvent_5
    151                }
    152                
    153                return 0;
   \                     ??SampleApp_ProcessEvent_7:
   \   000074   7A00         MOV     R2,#0x0
   \   000076   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_6:
   \   000078   7F06         MOV     R7,#0x6
   \   00007A   02....       LJMP    ?BANKED_LEAVE_XDATA
    154          }
    155          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    156          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    157          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
    158            DeId *DeviceId;
    159            senor *sen_Data;
    160            switch( pkt->clusterId )
   \   000009   E582         MOV     A,DPL
   \   00000B   2421         ADD     A,#0x21
   \   00000D   F8           MOV     R0,A
   \   00000E   E583         MOV     A,DPH
   \   000010   3400         ADDC    A,#0x0
   \   000012   F9           MOV     R1,A
   \   000013   E8           MOV     A,R0
   \   000014   FA           MOV     R2,A
   \   000015   E9           MOV     A,R1
   \   000016   FB           MOV     R3,A
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   00001D   78..         MOV     R0,#?V0 + 0
   \   00001F   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for SampleApp_MessageMSGCB>_0`:
   \   000022   0100         DW        1
   \   000024   02           DB        2
   \   000025   ....         DW        ??SampleApp_MessageMSGCB_0
   \   000027   ....         DW        ??SampleApp_MessageMSGCB_1
   \   000029   ....         DW        ??SampleApp_MessageMSGCB_0
   \   00002B   ....         DW        ??SampleApp_MessageMSGCB_2
    161            {
    162               case SAMPLEAPP_IN_CLUSTERID :
    163                     DeviceId=(DeId *)pkt->cmd.Data; //½«Êý¾Ý°ü×ª»»ÎªDeIdÀàÐÍ
   \                     ??SampleApp_MessageMSGCB_1:
   \   00002D   12....       LCALL   ?Subroutine3 & 0xFFFF
    164                     NodeId_arr[DeviceId->Id]=DeviceId->NetworkId;
   \                     ??CrossCallReturnLabel_0:
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   FC           MOV     R4,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   FD           MOV     R5,A
   \   000036   8882         MOV     DPL,R0
   \   000038   8983         MOV     DPH,R1
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   C3           CLR     C
   \   00003C   33           RLC     A
   \   00003D   F8           MOV     R0,A
   \   00003E   E4           CLR     A
   \   00003F   33           RLC     A
   \   000040   F9           MOV     R1,A
   \   000041   74..         MOV     A,#NodeId_arr & 0xff
   \   000043   28           ADD     A,R0
   \   000044   F582         MOV     DPL,A
   \   000046   74..         MOV     A,#(NodeId_arr >> 8) & 0xff
   \   000048   39           ADDC    A,R1
   \   000049   F583         MOV     DPH,A
   \   00004B   EC           MOV     A,R4
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   ED           MOV     A,R5
   \   00004F   F0           MOVX    @DPTR,A
    165                     osal_memcpy(&NodeId[NodeNum++],pkt->cmd.Data,3 );
   \   000050   90....       MOV     DPTR,#NodeNum
   \   000053   E0           MOVX    A,@DPTR
   \   000054   F9           MOV     R1,A
   \   000055   7401         MOV     A,#0x1
   \   000057   29           ADD     A,R1
   \   000058   F0           MOVX    @DPTR,A
   \   000059                ; Setup parameters for call to function osal_memcpy
   \   000059   8A82         MOV     DPL,R2
   \   00005B   8B83         MOV     DPH,R3
   \   00005D   12....       LCALL   ??Subroutine4_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000060   75..00       MOV     ?V0 + 2,#0x0
   \   000063   78..         MOV     R0,#?V0 + 0
   \   000065   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000068   7C03         MOV     R4,#0x3
   \   00006A   7D00         MOV     R5,#0x0
   \   00006C   E9           MOV     A,R1
   \   00006D   8CF0         MOV     B,R4
   \   00006F   A4           MUL     AB
   \   000070   F8           MOV     R0,A
   \   000071   A9F0         MOV     R1,B
   \   000073   74..         MOV     A,#NodeId & 0xff
   \   000075   28           ADD     A,R0
   \   000076   FA           MOV     R2,A
   \   000077   74..         MOV     A,#(NodeId >> 8) & 0xff
   \   000079   39           ADDC    A,R1
   \   00007A   FB           MOV     R3,A
   \   00007B   12....       LCALL   ??osal_memcpy?relay
   \   00007E   7403         MOV     A,#0x3
   \   000080   12....       LCALL   ?DEALLOC_XSTACK8
    166                    //HalLedBlink( HAL_LED_ALL, 0, 50, 200 );  
    167                     HalLedSet ( HAL_LED_2,HAL_LED_MODE_TOGGLE);
   \   000083                ; Setup parameters for call to function HalLedSet
   \   000083   7A08         MOV     R2,#0x8
   \   000085   7902         MOV     R1,#0x2
   \   000087   12....       LCALL   ??HalLedSet?relay
    168                     break;
   \   00008A   806C         SJMP    ??SampleApp_MessageMSGCB_0
    169                 
    170               case  SAMPLEAPP_DATA_CLUSTERID : 
    171                     
    172                     sen_Data=(senor *)pkt->cmd.Data; //½«Êý¾Ý°ü×ª»»ÎªsenorÀàÐÍ
   \                     ??SampleApp_MessageMSGCB_2:
   \   00008C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00008F   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000092   8882         MOV     DPL,R0
   \   000094   8983         MOV     DPH,R1
   \   000096   E0           MOVX    A,@DPTR
   \   000097   FA           MOV     R2,A
   \   000098   7403         MOV     A,#0x3
   \   00009A   6A           XRL     A,R2
   \   00009B   7028         JNZ     ??SampleApp_MessageMSGCB_3
    173                     if(sen_Data->Id==3)
    174                       sprintf(Uartbuf,"%d:%d:%d\n",sen_Data->Id,sen_Data->Data1,sen_Data->Data2);
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00009D                ; Setup parameters for call to function sprintf
   \   00009D   A3           INC     DPTR
   \   00009E   A3           INC     DPTR
   \   00009F   A3           INC     DPTR
   \   0000A0   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000A3   78..         MOV     R0,#?V0 + 0
   \   0000A5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A8   75..03       MOV     ?V0 + 0,#0x3
   \   0000AB   75..00       MOV     ?V0 + 1,#0x0
   \   0000AE   78..         MOV     R0,#?V0 + 0
   \   0000B0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B3   7C..         MOV     R4,#`?<Constant "%d:%d:%d\\n">` & 0xff
   \   0000B5   7D..         MOV     R5,#(`?<Constant "%d:%d:%d\\n">` >> 8) & 0xff
   \   0000B7   7A..         MOV     R2,#Uartbuf & 0xff
   \   0000B9   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   0000BB   12....       LCALL   ??sprintf?relay
   \   0000BE   7406         MOV     A,#0x6
   \   0000C0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000C3   801F         SJMP    ??SampleApp_MessageMSGCB_4
    175                     else
    176                        sprintf(Uartbuf,"%d:%d\n",sen_Data->Id,sen_Data->Data1);
                                       ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??SampleApp_MessageMSGCB_3:
   \   0000C5                ; Setup parameters for call to function sprintf
   \   0000C5   78..         MOV     R0,#?V0 + 0
   \   0000C7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000CA   8A..         MOV     ?V0 + 0,R2
   \   0000CC   75..00       MOV     ?V0 + 1,#0x0
   \   0000CF   78..         MOV     R0,#?V0 + 0
   \   0000D1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D4   7C..         MOV     R4,#`?<Constant "%d:%d\\n">` & 0xff
   \   0000D6   7D..         MOV     R5,#(`?<Constant "%d:%d\\n">` >> 8) & 0xff
   \   0000D8   7A..         MOV     R2,#Uartbuf & 0xff
   \   0000DA   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   0000DC   12....       LCALL   ??sprintf?relay
   \   0000DF   7404         MOV     A,#0x4
   \   0000E1   12....       LCALL   ?DEALLOC_XSTACK8
    177                        HalUARTWrite(0,Uartbuf,strlen(Uartbuf));
                                                             ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \                     ??SampleApp_MessageMSGCB_4:
   \   0000E4                ; Setup parameters for call to function HalUARTWrite
   \   0000E4                ; Setup parameters for call to function strlen
   \   0000E4   7A..         MOV     R2,#Uartbuf & 0xff
   \   0000E6   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   0000E8   12....       LCALL   ??strlen?relay
   \   0000EB   EA           MOV     A,R2
   \   0000EC   FC           MOV     R4,A
   \   0000ED   EB           MOV     A,R3
   \   0000EE   FD           MOV     R5,A
   \   0000EF   7A..         MOV     R2,#Uartbuf & 0xff
   \   0000F1   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   0000F3   7900         MOV     R1,#0x0
   \   0000F5   12....       LCALL   ??HalUARTWrite?relay
    178                     break;
    179                    
    180            }
    181          }
   \                     ??SampleApp_MessageMSGCB_0:
   \   0000F8                REQUIRE ?Subroutine1
   \   0000F8                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F03         MOV     R7,#0x3
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   8A82         MOV     DPL,R2
   \   000002   8B83         MOV     DPH,R3
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F8           MOV     R0,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \   000009   8882         MOV     DPL,R0
   \   00000B   8983         MOV     DPH,R1
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   A3           INC     DPTR
   \   000001                REQUIRE ??Subroutine4_0
   \   000001                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 0,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 1,A
   \   000007   22           RET
    182          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    183          void SampleApp_SendTheMessage(uint16 ShortAdr,uint8 command )
   \                     SampleApp_SendTheMessage:
    184          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 13
   \   000005   74F3         MOV     A,#-0xd
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   85..82       MOV     DPL,?XSP + 0
   \   00000E   85..83       MOV     DPH,?XSP + 1
   \   000011   F0           MOVX    @DPTR,A
    185            
    186            afAddrType_t  my_DstAddr;
    187            
    188            my_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000012   7409         MOV     A,#0x9
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   7402         MOV     A,#0x2
   \   000019   F0           MOVX    @DPTR,A
    189            if(command==10||command==1)
   \   00001A   85..82       MOV     DPL,?XSP + 0
   \   00001D   85..83       MOV     DPH,?XSP + 1
   \   000020   E0           MOVX    A,@DPTR
   \   000021   640A         XRL     A,#0xa
   \   000023   6005         JZ      ??SampleApp_SendTheMessage_0
   \   000025   E0           MOVX    A,@DPTR
   \   000026   6401         XRL     A,#0x1
   \   000028   7008         JNZ     ??SampleApp_SendTheMessage_1
    190               my_DstAddr.addrMode=(afAddrMode_t)AddrBroadcast;  //13ºÅÃüÁî¹Ø±ÕËùÓÐµÆ
   \                     ??SampleApp_SendTheMessage_0:
   \   00002A   7409         MOV     A,#0x9
   \   00002C   12....       LCALL   ?XSTACK_DISP0_8
   \   00002F   740F         MOV     A,#0xf
   \   000031   F0           MOVX    @DPTR,A
    191            my_DstAddr.endPoint =  SAMPLEAPP_ENDPOINT;
   \                     ??SampleApp_SendTheMessage_1:
   \   000032   740A         MOV     A,#0xa
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   7414         MOV     A,#0x14
   \   000039   F0           MOVX    @DPTR,A
    192            my_DstAddr.addr.shortAddr =ShortAdr;
   \   00003A   7401         MOV     A,#0x1
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   EA           MOV     A,R2
   \   000040   F0           MOVX    @DPTR,A
   \   000041   A3           INC     DPTR
   \   000042   EB           MOV     A,R3
   \   000043   F0           MOVX    @DPTR,A
    193            AF_DataRequest(&my_DstAddr, 
    194                           &SampleApp_epDesc,
    195                           SAMPLEAPP_OUT_CLUSTERID,
    196                           1,
    197                           (uint8 *)&command,
    198                           &SampleApp_TranskID,
    199                           AF_DISCV_ROUTE,
    200                           AF_DEFAULT_RADIUS );
   \   000044                ; Setup parameters for call to function AF_DataRequest
   \   000044   75..1E       MOV     ?V0 + 0,#0x1e
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004C   75....       MOV     ?V0 + 0,#SampleApp_TranskID & 0xff
   \   00004F   75....       MOV     ?V0 + 1,#(SampleApp_TranskID >> 8) & 0xff
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000057   7403         MOV     A,#0x3
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   8582..       MOV     ?V0 + 0,DPL
   \   00005F   8583..       MOV     ?V0 + 1,DPH
   \   000062   78..         MOV     R0,#?V0 + 0
   \   000064   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000067   75..01       MOV     ?V0 + 0,#0x1
   \   00006A   75..00       MOV     ?V0 + 1,#0x0
   \   00006D   78..         MOV     R0,#?V0 + 0
   \   00006F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000072   75..02       MOV     ?V0 + 0,#0x2
   \   000075   78..         MOV     R0,#?V0 + 0
   \   000077   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007A   7920         MOV     R1,#0x20
   \   00007C   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   00007E   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000080   740A         MOV     A,#0xa
   \   000082   12....       LCALL   ?XSTACK_DISP0_8
   \   000085   AA82         MOV     R2,DPL
   \   000087   AB83         MOV     R3,DPH
   \   000089   12....       LCALL   ??AF_DataRequest?relay
   \   00008C   7409         MOV     A,#0x9
   \   00008E   12....       LCALL   ?DEALLOC_XSTACK8
    201            
    202             HalLedSet ( HAL_LED_1,HAL_LED_MODE_TOGGLE);
   \   000091                ; Setup parameters for call to function HalLedSet
   \   000091   7A08         MOV     R2,#0x8
   \   000093   7901         MOV     R1,#0x1
   \   000095   12....       LCALL   ??HalLedSet?relay
    203          }
   \   000098   740D         MOV     A,#0xd
   \   00009A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00009D   7F02         MOV     R7,#0x2
   \   00009F   02....       LJMP    ?BANKED_LEAVE_XDATA
    204          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    205          static void rxCB(uint8 port,uint8 event) //´®¿Ú½ÓÊÕº¯Êý
   \                     rxCB:
    206          { 
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    207            //²»ÄÜÏò´®¿ÚÐ´ÈëÌ«¶àÊý¾Ý£¬·ñÔò»á·¢Éú¶ªÊ§
    208            uint8 i=0,j,choice=0;
    209            Send_Ur Send;
    210            HalUARTRead(0,Uartbuf,2);
   \   00000A                ; Setup parameters for call to function HalUARTRead
   \   00000A   7C02         MOV     R4,#0x2
   \   00000C   7D00         MOV     R5,#0x0
   \   00000E   7A..         MOV     R2,#Uartbuf & 0xff
   \   000010   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   000012   7900         MOV     R1,#0x0
   \   000014   12....       LCALL   ??HalUARTRead?relay
    211            if(osal_memcmp(Uartbuf,"id",2))
   \   000017                ; Setup parameters for call to function osal_memcmp
   \   000017   75....       MOV     ?V0 + 0,#`?<Constant "id">` & 0xff
   \   00001A   75....       MOV     ?V0 + 1,#(`?<Constant "id">` >> 8) & 0xff
   \   00001D   75..00       MOV     ?V0 + 2,#0x0
   \   000020   78..         MOV     R0,#?V0 + 0
   \   000022   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000025   7C02         MOV     R4,#0x2
   \   000027   7D00         MOV     R5,#0x0
   \   000029   79..         MOV     R1,#Uartbuf & 0xff
   \   00002B   7A..         MOV     R2,#(Uartbuf >> 8) & 0xff
   \   00002D   7B00         MOV     R3,#0x0
   \   00002F   12....       LCALL   ??osal_memcmp?relay
   \   000032   7403         MOV     A,#0x3
   \   000034   12....       LCALL   ?DEALLOC_XSTACK8
   \   000037   E9           MOV     A,R1
   \   000038   7003         JNZ     $+5
   \   00003A   02....       LJMP    ??rxCB_0 & 0xFFFF
    212            {
    213              /*HalUARTWrite(0,"A:\n",3);
    214               for(i=0;i<3;i++)
    215               {
    216                 To_string(Send.id,(uint8*)&NodeId[i].Id,1);
    217                 To_string(Send.NetworkId,(uint8*)&NodeId[i].NetworkId,2);
    218                 HalUARTWrite(0,"id£º",4);
    219                 HalUARTWrite(0,Send.id,2);
    220                 HalUARTWrite(0,"  ",2);
    221                 HalUARTWrite(0,"NetworkId£º",11);
    222                 HalUARTWrite(0,Send.NetworkId,4);
    223                 HalUARTWrite(0,"\n",1);
    224             
    225               }
    226               HalUARTWrite(0,"\n",1);
    227               HalUARTWrite(0,"B:\n",3);*/
    228               for(j=1;j<4;j++)
   \   00003D   85..82       MOV     DPL,?XSP + 0
   \   000040   85..83       MOV     DPH,?XSP + 1
   \   000043   7401         MOV     A,#0x1
   \   000045   F0           MOVX    @DPTR,A
    229               {
    230                 To_string(Send.id,(uint8*)&j,1);
                                          ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??rxCB_1:
   \   000046                ; Setup parameters for call to function To_string
   \   000046   7901         MOV     R1,#0x1
   \   000048   AC82         MOV     R4,DPL
   \   00004A   AD83         MOV     R5,DPH
   \   00004C   E9           MOV     A,R1
   \   00004D   12....       LCALL   ?XSTACK_DISP0_8
   \   000050   AA82         MOV     R2,DPL
   \   000052   AB83         MOV     R3,DPH
   \   000054   12....       LCALL   ??To_string?relay
    231                 To_string(Send.NetworkId,(uint8*)&NodeId_arr[j],2);
                                                 ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"

    uint8 i=0,j,choice=0;
          ^
"C:\Users\korny\Desktop\ÎïÁªÍø¿ÎÉè 2.0\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",208  Warning[Pe177]: 
          variable "i" was declared but never referenced
   \   000057                ; Setup parameters for call to function To_string
   \   000057   7902         MOV     R1,#0x2
   \   000059   85..82       MOV     DPL,?XSP + 0
   \   00005C   85..83       MOV     DPH,?XSP + 1
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   C3           CLR     C
   \   000061   33           RLC     A
   \   000062   FA           MOV     R2,A
   \   000063   E4           CLR     A
   \   000064   33           RLC     A
   \   000065   FB           MOV     R3,A
   \   000066   74..         MOV     A,#NodeId_arr & 0xff
   \   000068   2A           ADD     A,R2
   \   000069   FC           MOV     R4,A
   \   00006A   74..         MOV     A,#(NodeId_arr >> 8) & 0xff
   \   00006C   3B           ADDC    A,R3
   \   00006D   FD           MOV     R5,A
   \   00006E   7405         MOV     A,#0x5
   \   000070   12....       LCALL   ?XSTACK_DISP0_8
   \   000073   AA82         MOV     R2,DPL
   \   000075   AB83         MOV     R3,DPH
   \   000077   12....       LCALL   ??To_string?relay
    232                 HalUARTWrite(0,"id£º",4);
   \   00007A                ; Setup parameters for call to function HalUARTWrite
   \   00007A   7C04         MOV     R4,#0x4
   \   00007C   7D00         MOV     R5,#0x0
   \   00007E   7A..         MOV     R2,#`?<Constant "id\\243\\272">` & 0xff
   \   000080   7B..         MOV     R3,#(`?<Constant "id\\243\\272">` >> 8) & 0xff
   \   000082   7900         MOV     R1,#0x0
   \   000084   12....       LCALL   ??HalUARTWrite?relay
    233                 HalUARTWrite(0,Send.id,2);
   \   000087                ; Setup parameters for call to function HalUARTWrite
   \   000087   7C02         MOV     R4,#0x2
   \   000089   7D00         MOV     R5,#0x0
   \   00008B   7401         MOV     A,#0x1
   \   00008D   12....       LCALL   ?XSTACK_DISP0_8
   \   000090   AA82         MOV     R2,DPL
   \   000092   AB83         MOV     R3,DPH
   \   000094   7900         MOV     R1,#0x0
   \   000096   12....       LCALL   ??HalUARTWrite?relay
    234                 HalUARTWrite(0,"  ",2);
   \   000099                ; Setup parameters for call to function HalUARTWrite
   \   000099   7C02         MOV     R4,#0x2
   \   00009B   7D00         MOV     R5,#0x0
   \   00009D   7A..         MOV     R2,#`?<Constant "  ">` & 0xff
   \   00009F   7B..         MOV     R3,#(`?<Constant "  ">` >> 8) & 0xff
   \   0000A1   7900         MOV     R1,#0x0
   \   0000A3   12....       LCALL   ??HalUARTWrite?relay
    235                 HalUARTWrite(0,"NetworkId£º",11);
   \   0000A6                ; Setup parameters for call to function HalUARTWrite
   \   0000A6   7C0B         MOV     R4,#0xb
   \   0000A8   7D00         MOV     R5,#0x0
   \   0000AA   7A..         MOV     R2,#`?<Constant "NetworkId\\243\\272">` & 0xff
   \   0000AC   7B..         MOV     R3,#(`?<Constant "NetworkId\\243\\272">` >> 8) & 0xff
   \   0000AE   7900         MOV     R1,#0x0
   \   0000B0   12....       LCALL   ??HalUARTWrite?relay
    236                 HalUARTWrite(0,Send.NetworkId,4);
   \   0000B3                ; Setup parameters for call to function HalUARTWrite
   \   0000B3   7C04         MOV     R4,#0x4
   \   0000B5   7D00         MOV     R5,#0x0
   \   0000B7   7405         MOV     A,#0x5
   \   0000B9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BC   AA82         MOV     R2,DPL
   \   0000BE   AB83         MOV     R3,DPH
   \   0000C0   7900         MOV     R1,#0x0
   \   0000C2   12....       LCALL   ??HalUARTWrite?relay
    237                 HalUARTWrite(0,"\n",1);
   \   0000C5                ; Setup parameters for call to function HalUARTWrite
   \   0000C5   7C01         MOV     R4,#0x1
   \   0000C7   7D00         MOV     R5,#0x0
   \   0000C9   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   0000CB   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   0000CD   7900         MOV     R1,#0x0
   \   0000CF   12....       LCALL   ??HalUARTWrite?relay
    238             
    239               }
   \   0000D2   85..82       MOV     DPL,?XSP + 0
   \   0000D5   85..83       MOV     DPH,?XSP + 1
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   04           INC     A
   \   0000DA   F0           MOVX    @DPTR,A
   \   0000DB   C3           CLR     C
   \   0000DC   9404         SUBB    A,#0x4
   \   0000DE   5003         JNC     $+5
   \   0000E0   02....       LJMP    ??rxCB_1 & 0xFFFF
    240                HalUARTWrite(0,"\n",1);
   \   0000E3                ; Setup parameters for call to function HalUARTWrite
   \   0000E3   7C01         MOV     R4,#0x1
   \   0000E5   7D00         MOV     R5,#0x0
   \   0000E7   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   0000E9   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   0000EB   7900         MOV     R1,#0x0
   \   0000ED   12....       LCALL   ??HalUARTWrite?relay
   \   0000F0   02....       LJMP    ??rxCB_2 & 0xFFFF
    241              
    242             }
    243            else
    244            {
    245               choice=(Uartbuf[0]-48)*10;
    246               choice=choice+Uartbuf[1]-48;
    247               switch(choice)
   \                     ??rxCB_0:
   \   0000F3   90....       MOV     DPTR,#NodeId_arr + 2
   \   0000F6   E0           MOVX    A,@DPTR
   \   0000F7   FA           MOV     R2,A
   \   0000F8   A3           INC     DPTR
   \   0000F9   E0           MOVX    A,@DPTR
   \   0000FA   FB           MOV     R3,A
   \   0000FB   A3           INC     DPTR
   \   0000FC   E0           MOVX    A,@DPTR
   \   0000FD   FE           MOV     R6,A
   \   0000FE   A3           INC     DPTR
   \   0000FF   E0           MOVX    A,@DPTR
   \   000100   FF           MOV     R7,A
   \   000101   A3           INC     DPTR
   \   000102   E0           MOVX    A,@DPTR
   \   000103   FC           MOV     R4,A
   \   000104   A3           INC     DPTR
   \   000105   E0           MOVX    A,@DPTR
   \   000106   FD           MOV     R5,A
   \   000107   75F00A       MOV     B,#0xa
   \   00010A   90....       MOV     DPTR,#Uartbuf
   \   00010D   E0           MOVX    A,@DPTR
   \   00010E   A4           MUL     AB
   \   00010F   7583..       MOV     DPH,#((Uartbuf + 1) >> 8) & 0xff
   \   000112   7582..       MOV     DPL,#(Uartbuf + 1) & 0xff
   \   000115   F8           MOV     R0,A
   \   000116   E0           MOVX    A,@DPTR
   \   000117   28           ADD     A,R0
   \   000118   24E6         ADD     A,#-0x1a
   \   00011A   6025         JZ      ??rxCB_3
   \   00011C   14           DEC     A
   \   00011D   602A         JZ      ??rxCB_4
   \   00011F   14           DEC     A
   \   000120   602B         JZ      ??rxCB_5
   \   000122   14           DEC     A
   \   000123   602C         JZ      ??rxCB_6
   \   000125   14           DEC     A
   \   000126   602D         JZ      ??rxCB_7
   \   000128   14           DEC     A
   \   000129   602E         JZ      ??rxCB_8
   \   00012B   24FA         ADD     A,#-0x6
   \   00012D   602E         JZ      ??rxCB_9
   \   00012F   14           DEC     A
   \   000130   6032         JZ      ??rxCB_10
   \   000132   14           DEC     A
   \   000133   6033         JZ      ??rxCB_11
   \   000135   24F8         ADD     A,#-0x8
   \   000137   6033         JZ      ??rxCB_12
   \   000139   14           DEC     A
   \   00013A   6034         JZ      ??rxCB_13
   \   00013C   14           DEC     A
   \   00013D   6035         JZ      ??rxCB_14
   \   00013F   803C         SJMP    ??rxCB_2
    248               {
    249                 
    250                 case 10:SampleApp_SendTheMessage(0xFFFF,10);break; //Àë¼ÒÄ£Ê½,¹Ø±ÕËùÓÐµÆ
   \                     ??rxCB_3:
   \   000141                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000141   790A         MOV     R1,#0xa
   \   000143   7AFF         MOV     R2,#-0x1
   \   000145   7BFF         MOV     R3,#-0x1
   \   000147   8031         SJMP    ??rxCB_15
    251                 //¿ÍÌü
    252                 case 11:SampleApp_SendTheMessage(NodeId_arr[1],11);break; //ÆÕÍ¨Ä£Ê½
   \                     ??rxCB_4:
   \   000149                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000149   790B         MOV     R1,#0xb
   \   00014B   802D         SJMP    ??rxCB_15
    253                 case 12:SampleApp_SendTheMessage(NodeId_arr[1],12);break; //Ó­±öÄ£Ê½
   \                     ??rxCB_5:
   \   00014D                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   00014D   790C         MOV     R1,#0xc
   \   00014F   8029         SJMP    ??rxCB_15
    254                 case 13:SampleApp_SendTheMessage(NodeId_arr[1],13);break; //Ó°ÔºÄ£Ê½
   \                     ??rxCB_6:
   \   000151                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000151   790D         MOV     R1,#0xd
   \   000153   8025         SJMP    ??rxCB_15
    255                 case 14:SampleApp_SendTheMessage(NodeId_arr[1],14);break; //¾Û»áÄ£Ê½
   \                     ??rxCB_7:
   \   000155                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000155   790E         MOV     R1,#0xe
   \   000157   8021         SJMP    ??rxCB_15
    256                 case 15:SampleApp_SendTheMessage(NodeId_arr[1],15);break; //¹Ø±Õ¿ÍÌüËùÓÐµÆ
   \                     ??rxCB_8:
   \   000159                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000159   790F         MOV     R1,#0xf
   \   00015B   801D         SJMP    ??rxCB_15
    257                 //³ø·¿
    258                 case 21:SampleApp_SendTheMessage(NodeId_arr[2],21);break; //ÆÕÍ¨Ä£Ê½
   \                     ??rxCB_9:
   \   00015D                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   00015D   7915         MOV     R1,#0x15
   \                     ??rxCB_16:
   \   00015F   EE           MOV     A,R6
   \   000160   FA           MOV     R2,A
   \   000161   EF           MOV     A,R7
   \   000162   8015         SJMP    ??rxCB_17
    259                 case 22:SampleApp_SendTheMessage(NodeId_arr[2],22);break; //±ö¿ÍÄ£Ê½
   \                     ??rxCB_10:
   \   000164                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000164   7916         MOV     R1,#0x16
   \   000166   80F7         SJMP    ??rxCB_16
    260                 case 23:SampleApp_SendTheMessage(NodeId_arr[2],23);break; //¹Ø±Õ³ø·¿ËùÓÐµÆ
   \                     ??rxCB_11:
   \   000168                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000168   7917         MOV     R1,#0x17
   \   00016A   80F3         SJMP    ??rxCB_16
    261                 //ÎÔÊÒ
    262                 case 31:SampleApp_SendTheMessage(NodeId_arr[3],31);break; //Õý³£Ä£Ê½
   \                     ??rxCB_12:
   \   00016C                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   00016C   791F         MOV     R1,#0x1f
   \   00016E   8006         SJMP    ??rxCB_18
    263                 case 32:SampleApp_SendTheMessage(NodeId_arr[3],32);break; //Ë¯¾õÄ£Ê½
   \                     ??rxCB_13:
   \   000170                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000170   7920         MOV     R1,#0x20
   \   000172   8002         SJMP    ??rxCB_18
    264                 case 33:SampleApp_SendTheMessage(NodeId_arr[3],33);break; //Æð´²Ä£Ê½
   \                     ??rxCB_14:
   \   000174                ; Setup parameters for call to function SampleApp_SendTheMessage
   \   000174   7921         MOV     R1,#0x21
   \                     ??rxCB_18:
   \   000176   EC           MOV     A,R4
   \   000177   FA           MOV     R2,A
   \   000178   ED           MOV     A,R5
   \                     ??rxCB_17:
   \   000179   FB           MOV     R3,A
   \                     ??rxCB_15:
   \   00017A   12....       LCALL   ??SampleApp_SendTheMessage?relay
    265                 
    266               }
    267            }
    268             osal_memset( Uartbuf, 0, 2); //Çå³ý½ÓÊÕÊý¾Ý
   \                     ??rxCB_2:
   \   00017D                ; Setup parameters for call to function osal_memset
   \   00017D   7C02         MOV     R4,#0x2
   \   00017F   7D00         MOV     R5,#0x0
   \   000181   7900         MOV     R1,#0x0
   \   000183   7A..         MOV     R2,#Uartbuf & 0xff
   \   000185   7B..         MOV     R3,#(Uartbuf >> 8) & 0xff
   \   000187   12....       LCALL   ??osal_memset?relay
    269          }
   \   00018A   7409         MOV     A,#0x9
   \   00018C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00018F   02....       LJMP    ?Subroutine1 & 0xFFFF
    270          
    271          /******************************************
    272          *              
    273          *     º¯ÊýÃû³Æ£ºSampleApp_HandleKeys
    274          *     º¯Êý¹¦ÄÜ£º°´¼üÊÂ¼þ´¦Àíº¯Êý
    275          *
    276          *******************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    277          void SampleApp_HandleKeys( uint8 shift, uint8 keys ) 
   \                     SampleApp_HandleKeys:
    278          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
    279                (void)shift;  // Intentionally unreferenced parameter
    280                
    281                if ( keys & HAL_KEY_SW_6 ) //S1
   \   000006   A2E5         MOV     C,0xE0 /* A   */.5
   \   000008   500A         JNC     ??SampleApp_HandleKeys_0
    282                {
    283                     P10_Normal_IO();
   \   00000A                ; Setup parameters for call to function P10_Normal_IO
   \   00000A   12....       LCALL   ??P10_Normal_IO?relay
    284                     HalLedSet ( HAL_LED_1,HAL_LED_MODE_TOGGLE);
   \   00000D                ; Setup parameters for call to function HalLedSet
   \   00000D   7A08         MOV     R2,#0x8
   \   00000F   7901         MOV     R1,#0x1
   \   000011   12....       LCALL   ??HalLedSet?relay
    285                       
    286                }
    287                
    288              
    289          }
   \                     ??SampleApp_HandleKeys_0:
   \   000014   02....       LJMP    ?Subroutine0 & 0xFFFF
    290          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    291          void To_string(uint8 *dest,char *src,uint8 lenght)
   \                     To_string:
    292          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
    293             uint8 *xad;
    294             uint8 i;
    295             uint8 ch;
    296             xad=src+lenght-1;
                       ^
Warning[Pe513]: a value of type "char *" cannot be assigned to an entity of
          type "unsigned char *"
   \   000007   89..         MOV     ?V0 + 2,R1
   \   000009   EC           MOV     A,R4
   \   00000A   25..         ADD     A,?V0 + 2
   \   00000C   F8           MOV     R0,A
   \   00000D   ED           MOV     A,R5
   \   00000E   3400         ADDC    A,#0x0
   \   000010   F9           MOV     R1,A
   \   000011   E8           MOV     A,R0
   \   000012   24FF         ADD     A,#-0x1
   \   000014   18           DEC     R0
   \   000015   E9           MOV     A,R1
   \   000016   34FF         ADDC    A,#-0x1
   \   000018   F9           MOV     R1,A
    297             for(i=0;i<lenght;i++,xad--)
   \   000019   75..00       MOV     ?V0 + 1,#0x0
   \   00001C   8015         SJMP    ??To_string_0
    298             {
    299               ch=(*xad>>4)&0x0f;
    300               dest[i<<1]=ch+((ch<10) ? '0': '7');
    301               ch=*xad&0x0f;
    302               dest[(i<<1)+1]=ch+((ch<10)? '0' : '7');
   \                     ??To_string_1:
   \   00001E   7E37         MOV     R6,#0x37
   \                     ??To_string_2:
   \   000020   EE           MOV     A,R6
   \   000021   25..         ADD     A,?V0 + 2
   \   000023   8C82         MOV     DPL,R4
   \   000025   8D83         MOV     DPH,R5
   \   000027   A3           INC     DPTR
   \   000028   F0           MOVX    @DPTR,A
   \   000029   05..         INC     ?V0 + 1
   \   00002B   E8           MOV     A,R0
   \   00002C   24FF         ADD     A,#-0x1
   \   00002E   18           DEC     R0
   \   00002F   E9           MOV     A,R1
   \   000030   34FF         ADDC    A,#-0x1
   \   000032   F9           MOV     R1,A
   \                     ??To_string_0:
   \   000033   E5..         MOV     A,?V0 + 1
   \   000035   C3           CLR     C
   \   000036   95..         SUBB    A,?V0 + 0
   \   000038   503D         JNC     ??To_string_3
   \   00003A   8882         MOV     DPL,R0
   \   00003C   8983         MOV     DPH,R1
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   C4           SWAP    A
   \   000040   540F         ANL     A,#0xf
   \   000042   F5..         MOV     ?V0 + 2,A
   \   000044   C3           CLR     C
   \   000045   940A         SUBB    A,#0xa
   \   000047   5004         JNC     ??To_string_4
   \   000049   7E30         MOV     R6,#0x30
   \   00004B   8002         SJMP    ??To_string_5
   \                     ??To_string_4:
   \   00004D   7E37         MOV     R6,#0x37
   \                     ??To_string_5:
   \   00004F   E5..         MOV     A,?V0 + 1
   \   000051   C3           CLR     C
   \   000052   33           RLC     A
   \   000053   FC           MOV     R4,A
   \   000054   E4           CLR     A
   \   000055   33           RLC     A
   \   000056   FD           MOV     R5,A
   \   000057   EA           MOV     A,R2
   \   000058   2C           ADD     A,R4
   \   000059   FC           MOV     R4,A
   \   00005A   EB           MOV     A,R3
   \   00005B   3D           ADDC    A,R5
   \   00005C   FD           MOV     R5,A
   \   00005D   EE           MOV     A,R6
   \   00005E   25..         ADD     A,?V0 + 2
   \   000060   8C82         MOV     DPL,R4
   \   000062   8D83         MOV     DPH,R5
   \   000064   F0           MOVX    @DPTR,A
   \   000065   8882         MOV     DPL,R0
   \   000067   8983         MOV     DPH,R1
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   540F         ANL     A,#0xf
   \   00006C   F5..         MOV     ?V0 + 2,A
   \   00006E   C3           CLR     C
   \   00006F   940A         SUBB    A,#0xa
   \   000071   50AB         JNC     ??To_string_1
   \   000073   7E30         MOV     R6,#0x30
   \   000075   80A9         SJMP    ??To_string_2
    303             }
    304          }
   \                     ??To_string_3:
   \   000077   7F04         MOV     R7,#0x4
   \   000079   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendTheMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendTheMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??rxCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    rxCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??To_string?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    To_string

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%d:%d:%d\\n">`:
   \   000000   25643A25     DB "%d:%d:%d\012"
   \            643A2564
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%d:%d\\n">`:
   \   000000   25643A25     DB "%d:%d\012"
   \            640A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "id">`:
   \   000000   696400       DB "id"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "id\\243\\272">`:
   \   000000   6964A3BA     DB "id\243\272"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "  ">`:
   \   000000   202000       DB "  "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "NetworkId\\243\\272">`:
   \   000000   4E657477     DB "NetworkId\243\272"
   \            6F726B49
   \            64A3BA00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\n">`:
   \   000000   0A00         DB "\012"

   Maximum stack usage in bytes:

     Function                      ISTACK PSTACK XSTACK
     --------                      ------ ------ ------
     SampleApp_HandleKeys              0      0     23
       -> P10_Normal_IO                0      0     18
       -> HalLedSet                    0      0     18
     SampleApp_Init                    0      0     38
       -> afRegister                   0      0     76
       -> RegisterForKeys              0      0     76
       -> HalUARTOpen                  0      0     76
       -> osal_set_event               0      0     76
     SampleApp_MessageMSGCB            0      0     31
       -> osal_memcpy                  0      0     28
       -> HalLedSet                    0      0     22
       -> sprintf                      0      0     34
       -> sprintf                      0      0     30
       -> strlen                       0      0     22
       -> HalUARTWrite                 0      0     22
     SampleApp_ProcessEvent            0      0     14
       -> osal_msg_receive             0      0     28
       -> SampleApp_MessageMSGCB       0      0     28
       -> osal_msg_deallocate          0      0     28
       -> osal_msg_receive             0      0     28
       -> SampleApp_HandleKeys         0      0     28
       -> SampleApp_SendTheMessage     0      0     28
     SampleApp_SendTheMessage          1      0     52
       -> AF_DataRequest               0      0     64
       -> HalLedSet                    0      0     46
     To_string                         1      0     32
     rxCB                              2      0     23
       -> HalUARTRead                  0      0     40
       -> osal_memcmp                  0      0     46
       -> To_string                    0      0     40
       -> To_string                    0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> HalUARTWrite                 0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> SampleApp_SendTheMessage     0      0     40
       -> osal_memset                  0      0     40


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     SampleApp_IN_ClusterList            4
     SampleApp_OUT_ClusterList           4
     SampleApp_SimpleDesc               12
     SampleApp_epDesc                    6
     SampleApp_TaskID                    1
     SampleApp_NwkState                  1
     SampleApp_TranskID                  1
     Uartbuf                            20
     NodeId                              9
     NodeNum                             1
     NodeId_arr                          8
     SampleApp_Init                    121
     ?Subroutine0                        5
     SampleApp_ProcessEvent            125
     SampleApp_MessageMSGCB            248
     ?Subroutine1                        5
     ?Subroutine3                       14
     ?Subroutine2                        1
     ??Subroutine4_0                     8
     SampleApp_SendTheMessage          162
     rxCB                              402
     SampleApp_HandleKeys               23
     To_string                         124
     ??SampleApp_Init?relay              6
     ??SampleApp_ProcessEvent?relay      6
     ??SampleApp_MessageMSGCB?relay      6
     ??SampleApp_SendTheMessage?relay    6
     ??rxCB?relay                        6
     ??SampleApp_HandleKeys?relay        6
     ??To_string?relay                   6
     ?<Constant "%d:%d:%d\n">           10
     ?<Constant "%d:%d\n">               7
     ?<Constant "id">                    3
     ?<Constant "id\243\272">            5
     ?<Constant "  ">                    3
     ?<Constant "NetworkId\243\272">    12
     ?<Constant "\n">                    2

 
 1 238 bytes in segment BANKED_CODE
    42 bytes in segment BANK_RELAYS
    62 bytes in segment XDATA_ROM_C
    47 bytes in segment XDATA_Z
 
 1 280 bytes of CODE  memory
    62 bytes of CONST memory
    47 bytes of XDATA memory

Errors: none
Warnings: 7
